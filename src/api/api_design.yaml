swagger: "2.0"
info:
  title: ML Service API
  version: 1.0.0
paths:
  /v1/auth/sign-in:
    post:
      summary: Вход пользователя
      description: Аутентификация пользователя.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user_info
          required: true
          description: Данные для входа пользователя.
          schema:
            $ref: "#/definitions/SignIn"
      responses:
        200:
          description: Успешная аутентификация
          schema:
            $ref: "#/definitions/SignInResponse"
        401:
          description: Неправильные учетные данные

  /v1/auth/sign-up:
    post:
      summary: Регистрация нового пользователя
      description: Создает нового пользователя.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user_info
          required: true
          description: Данные нового пользователя.
          schema:
            $ref: "#/definitions/SignUp"
      responses:
        200:
          description: Пользователь успешно зарегистрирован
        400:
          description: Некорректные данные пользователя
        409:
          description: Пользователь с таким email уже существует

  /v1/auth/me:
    get:
      summary: Получение информации о текущем пользователе
      description: Возвращает информацию о текущем пользователе.
      responses:
        200:
          description: Информация о текущем пользователе
          schema:
            $ref: "#/definitions/User"

  /v1/billing/points:
    get:
      summary: Просмотр баллов пользователя
      description: Возвращает текущее количество баллов пользователя.
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
      responses:
        200:
          description: Текущее количество баллов пользователя

    post:
      summary: Списание баллов за использование сервиса
      description: Списывает баллы с пользовательского счета за использование сервиса.
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
        - in: body
          name: BillingDetails
          required: true
          description: Данные для списания баллов.
          schema:
            $ref: "#/definitions/Billing"
      responses:
        200:
          description: Баллы успешно списаны

  /v1/billing/history:
    get:
      summary: Просмотр истории биллинга пользователя
      description: Возвращает историю биллинга пользователя.
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
      responses:
        200:
          description: История биллинга пользователя
          schema:
            type: array
            items:
              $ref: '#/definitions/BillingHistory'

  /v1/prediction:
    post:
      summary: Получение предсказания от модели
      description: Отправляет файл на предсказание модели.
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          required: true
          type: file
        - in: formData
          name: modelName
          required: true
          type: string
        - in: header
          name: Authorization
          required: true
          type: string
      responses:
        200:
          description: Отправка файла на предсказание

    get:
      summary: Скачивание CSV с результатами предсказаний
      description: Скачивает CSV файл с результатами предсказаний.
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
      responses:
        200:
          description: CSV файл успешно скачан
          schema:
            type: file
            format: binary

definitions:
  SignIn:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password

  SignUp:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
    required:
      - name
      - email
      - password

  SignInResponse:
    type: object
    properties:
      token:
        type: string
    required:
      - token

  User:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
    required:
      - name
      - email

  Billing:
    type: object
    properties:
      points:
        type: integer
    required:
      - points

  BillingHistory:
    type: object
    properties:
      id:
        type: integer
      billing_id:
        type: integer
      points_changed:
        type: integer
      reason:
        type: string
      changed_at:
        type: string
    required:
      - id
      - billing_id
      - points_changed
      - reason
      - changed_at


